openapi: "3.0.1"
info:
  title: "Tech Conferences API"
  version: "0.1.0"
  contact:
    name: Developer Support
    url: developers.conferences.io/support
    email: support@conferences.io
servers:
- url: https://api.conferences.io
  description: Production
tags:
  - name: categories
    description: |
      Endpoints for getting categories conferences can be apart of
  - name: conferences
    description: |
      Endpoints for working with conferences
paths:
  /categories:
    get:
      summary: List categories
      description: |
        Get a list of categories that apply to conferences
      operationId: getCategories
      tags:
        - categories
      responses:
        200:
          $ref: '#/components/responses/CategoriesResponse'
  /conferences:
    get:
      summary: List conferences
      description: |
        Get a list of all tech conferences
      operationId: getConferences
      tags:
        - conferences
      responses:
        200:
          $ref: '#/components/responses/ConferencesResponse'
  /conferences/{id}/attendees:
    parameters:
      - $ref: '#/components/parameters/conferenceId'
    get:
      summary: Conference attendees
      description: |
        Get all attendees and speakers attending a particular conference
      operationId: getConferenceAttendees
      tags:
        - conferences
      responses:
        200:
          $ref: '#/components/responses/AttendeesResponse'
  /conferences/{id}/tracks:
    parameters:
      - $ref: '#/components/parameters/conferenceId'
    get:
      summary: Conference tracks
      description: |
        Get the tracks a conference offers. Not all conferences provide defined tracks
        so you won't always get a result
      operationId: getConferenceTracks
      tags:
        - conferences
      responses:
        200:
          $ref: '#/components/responses/TracksResponse'
  /conferences/{id}/sessions:
    parameters:
      - $ref: '#/components/parameters/conferenceId'
    get:
      summary: Conference session
      description: |
        Get all sessions at the conference, sessions include: sessions, tutorials, workshops, breaks and after parties
      operationId: getConferenceSessions
      tags:
        - conferences
      responses:
        200:
          $ref: '#/components/responses/SessionsResponse'
  /conferences/{id}/schedule:
    parameters:
      - $ref: '#/components/parameters/conferenceId'
    get:
      summary: Conferences schedule
      description: |
        Get the schedule for the conference, broken down by the days of the conference
      operationId: getConferenceSchedule
      tags:
        - conferences
      responses:
        200:
          $ref: '#/components/responses/ScheduleResponse'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    Conference:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
        - id
        - name
        - location
        - start_date
        - end_date
    Attendee:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        display_name:
          type: string
        company:
          type: string
        twitter_handle:
          type: string
      required:
        - id
        - first_name
        - last_name
        - display_name
    Track:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: The name of the track
      required:
       - id
       - name
    Session:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - session
            - tutorial
            - workshop
            - break
            - after party
            - keynote
        start_time:
          type: string
          format: 'date-time'
        end_time:
          type: string
          format: 'date-time'
        room_name:
          type: string
      required:
        - id
        - name
        - type
        - start_time
        - end_time
    Tutorial:
      allOf:
        - $ref: '#/components/schemas/Session'
        - type: object
          properties:
            materials:
              type: string
            room_name:
              type: string
          required:
            - materials
            - room_name
    Workshop:
      allOf:
        - $ref: '#/components/schemas/Tutorial'
    Break:
      allOf:
        - $ref: '#/components/schemas/Session'
    AfterParty:
      allOf:
        - $ref: '#/components/schemas/Session'
        - type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
          required:
            - location
    Location:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
    Schedule:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DateSchedule'
    DateSchedule:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/Session'
          - $ref: '#/components/schemas/Tutorial'
          - $ref: '#/components/schemas/Workshop'
          - $ref: '#/components/schemas/Break'
          - $ref: '#/components/schemas/AfterParty'
        discriminator:
          propertyName: type
          mapping:
            session: '#/components/schemas/Session'
            tutorial: '#/components/schemas/Tutorial'
            workshop: '#/components/schemas/Workshop'
            break: '#/components/schemas/Break'
            'after party': '#/components/schemas/AfterParty'
      minLength: 1
  parameters:
    conferenceId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: |
        The ID of the conference
  responses:
    CategoriesResponse:
      description: A list a categories
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
                minLength: 1
          examples:
            categoriesArray:
              $ref: '#/components/examples/CategoriesResponse'
    ConferencesResponse:
      description: A list of conferences
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Conference'
          examples:
            conferencesArray:
              $ref: '#/components/examples/ConferencesResponse'
      links:
        attendees:
          $ref: '#/components/links/ConferenceAttendees'
        tracks:
          $ref: '#/components/links/ConferenceTracks'
        sessions:
          $ref: '#/components/links/ConferenceSessions'
        schedule:
          $ref: '#/components/links/ConferenceSchedule'
    AttendeesResponse:
      description: A list of attendees for the conference
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Attendee'
                minLength: 1
          examples:
            attendeesArray:
              $ref: '#/components/examples/AttendeesResponse'
    TracksResponse:
      description: A list of tracks available at the conference
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
          examples:
            tracksArray:
              $ref: '#/components/examples/TracksResponse'
    SessionsResponse:
      description: A list of sessions available at the conference
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Session'
                    - $ref: '#/components/schemas/Tutorial'
                    - $ref: '#/components/schemas/Workshop'
                    - $ref: '#/components/schemas/Break'
                    - $ref: '#/components/schemas/AfterParty'
                  discriminator:
                    propertyName: type
                    mapping:
                      session: '#/components/schemas/Session'
                      tutorial: '#/components/schemas/Tutorial'
                      workshop: '#/components/schemas/Workshop'
                      break: '#/components/schemas/Break'
                      'after party': '#/components/schemas/AfterParty'
          examples:
            sessionsArray:
              $ref: '#/components/examples/SessionsResponse'
    ScheduleResponse:
      description: The schedule for the conference, grouped by day
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Schedule'
          examples:
            scheduleObject:
              $ref: '#/components/examples/ScheduleResponse'
  examples:
    CategoriesResponse:
      summary: An example response of categories
      value:
        data:
          - id: 8578fb8a-8ac7-4861-8ac6-15e8aff13751
            name: PHP
          - id: 0ca794d8-7bc6-4f16-939e-14bd75e6e6a6
            name: Laravel
          - id: f171309c-c555-4717-9b19-a22d32ae9e19
            name: JavaScript
    ConferencesResponse:
      summary: An example response of conferences
      value:
        data:
          - id: ee8d8c43-8fdb-40ad-9437-0c5db7de6c1b
            name: Longhorn PHP Conference
            location:
              name: University of Texas Commons Learning Center
              address: 10100 Burnet Road, Bldg 137
              city: Austin
              state: Texas
            description: |
              A 3-day conference to help PHP developers level up their craft
              and connect with the larger PHP community.
            categories:
              - id: 573160ee-b2c9-443c-bd60-104ecb29c33c
                name: PHP
            start_date: 2018-04-19
            end_date: 2018-04-21
          - id: 573160ee-b2c9-443c-bd60-104ecb29c33c
            name: Laracon
            location:
              name: The Museum of Science and Industry
              address: 5700 S Lake Shore Drive
              city: Chicago
              state: Illinois
            start_date: 2018-07-25
            end_date: 2018-07-26
    AttendeesResponse:
      summary: An example response of conference attendees
      value:
        data:
          - id: 52763005-6b84-4d23-87e2-266be1650d55
            first_name: Hunter
            last_name: Skrasek
            display_name: Hunter S.
            company: Modernize
            twitter_handle: '@hskrasek'
          - id: 1226e12a-75cd-444c-80e6-a654272e6e90
            first_name: Jane
            last_name: Smith
            display_name: Jane S.
    TracksResponse:
      summary: An example response of conference tracks
      value:
        data:
          - id: 9e3c6317-22ec-45b2-8bc0-85ffa0825d96
            name: API Track
          - id: 690539de-afe3-4996-8092-d2d6e8db5f28
            name: TDD Track
    SessionsResponse:
      summary: An example response of conference sessions, of all types
      value:
        data:
          - id: af79cc56-88c0-4611-bf18-4d92d5573347
            name: Building APIs You Wont Hate
            description: |
              How to build APIs you, or Phil Sturgeon wont hate
            type: workshop
            start_time: 2018-10-21 9:00:00
            end_time: 2018-10-21 11:00:00
            room_name: Workshop room
            materials: |
              Clone this github repo: https://github.com/hskrasek/example
          - id: e65d485b-eab1-4194-b035-236d13630eae
            name: How to create an API pipeline with Speccy
            description: |
              Learn how to create an entire API pipeline with just Speccy, and nothing else
            type: tutorial
            start_time: 2018-10-21 9:00:00
            end_time: 2018-10-21 11:00:00
            room_name: Tutorial room
            materials: |
              Clone this github repo: https://github.com/hskrasek/example
          - id: ef977672-d528-4217-921d-80b5a64b6bba
            name: Break Time!
            type: break
            start_time: 2018-10-21 11:00:00
            end_time: 2018-10-21 11:15:00
            room_name:
          - id: 88435a61-5fa5-4ecc-a56e-8aa41b12e8f4
            name: I Didn't Know Laravel Could Do That!
            description: |
              If you’re into to Laravel, you’ve probably already tried out the basic MVC features.
              What you probably haven’t gotten to yet is all of the amazing features that make Laravel truly a “full stack” framework.
              In this talk, we’ll cover queueing jobs, send emails, search, browser tests, event broadcasting and more.
              This will be a great crash course on letting Laravel do the heavy lifting for you, and making sure you know what it’s capable of so you don’t accidentally reinvent the wheel.
            type: session
            start_time: 2018-10-21 18:30:00
            end_time: 2018-10-21 20:00:00
            room_name:
          - id: 2e3d8f45-2e2b-47d7-98eb-f2515e9f0c2f
            name: The best after party ever
            description: |
              Join us for the greatest after party at a tech conference ever
              of all time
            type: after party
            start_time: 2018-10-21 18:30:00
            end_time: 2018-10-21 20:00:00
            location:
              name: Coolest venue ever
              address: 12345 Awesome Ln.
              city: Coolville
              state: Texas
    ScheduleResponse:
      summary: An example of a schedule response
      value:
        data:
          '2018-10-21':
            - id: af79cc56-88c0-4611-bf18-4d92d5573347
              name: Building APIs You Wont Hate
              description: |
                How to build APIs you, or Phil Sturgeon wont hate
              type: workshop
              start_time: 2018-10-21 9:00:00
              end_time: 2018-10-21 11:00:00
              room_name: Workshop room
              materials: |
                Clone this github repo: https://github.com/hskrasek/example
            - id: e65d485b-eab1-4194-b035-236d13630eae
              name: How to create an API pipeline with Speccy
              description: |
                Learn how to create an entire API pipeline with just Speccy, and nothing else
              type: tutorial
              start_time: 2018-10-21 9:00:00
              end_time: 2018-10-21 11:00:00
              room_name: Tutorial room
              materials: |
                Clone this github repo: https://github.com/hskrasek/example
          '2018-10-22':
            - id: ef977672-d528-4217-921d-80b5a64b6bba
              name: Break Time!
              type: break
              start_time: 2018-10-21 11:00:00
              end_time: 2018-10-21 11:15:00
              room_name:
            - id: 88435a61-5fa5-4ecc-a56e-8aa41b12e8f4
              name: I Didn't Know Laravel Could Do That!
              description: |
                If you’re into to Laravel, you’ve probably already tried out the basic MVC features.
                What you probably haven’t gotten to yet is all of the amazing features that make Laravel truly a “full stack” framework.
                In this talk, we’ll cover queueing jobs, send emails, search, browser tests, event broadcasting and more.
                This will be a great crash course on letting Laravel do the heavy lifting for you, and making sure you know what it’s capable of so you don’t accidentally reinvent the wheel.
              type: session
              start_time: 2018-10-21 18:30:00
              end_time: 2018-10-21 20:00:00
              room_name:
            - id: 2e3d8f45-2e2b-47d7-98eb-f2515e9f0c2f
              name: The best after party ever
              description: |
                Join us for the greatest after party at a tech conference ever
                of all time
              type: after party
              start_time: 2018-10-21 18:30:00
              end_time: 2018-10-21 20:00:00
              location:
                name: Coolest venue ever
                address: 12345 Awesome Ln.
                city: Coolville
                state: Texas
  links:
    ConferenceAttendees:
      operationId: getConferenceAttendees
      parameters:
        id: $response.body#/data/0/id
      description: |
        Using the id of the conference, you can get its attendees
        by using it as the `id` parameter in `GET /conferences/{id}/attendees`
    ConferenceTracks:
      operationId: getConferenceTracks
      parameters:
        id: $response.body#/data/0/id
      description: |
        Using the id of the conference, you can get its tracks
        by using it as the `id` parameter in `GET /conferences/{id}/tracks`
    ConferenceSessions:
      operationId: getConferenceSessions
      parameters:
        id: $response.body#/data/0/id
      description: |
        Using the id of the conference, you can get its sessions
        by using it as the `id` parameter in `GET /conferences/{id}/sessions`
    ConferenceSchedule:
      operationId: getConferenceSchedule
      parameters:
        id: $response.body#/data/0/id
      description: |
        Using the id of the conference, you can get its schedule
        by using it as the `id` parameter in `GET /conferences/{id}/schedule`
